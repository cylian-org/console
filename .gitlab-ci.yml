###
### Global config
###
image: docker:git
services:
- docker:dind
stages:
- build
- cascade

###
### Build @ gitlab.cylian.org
###
build:cylian.org:
  stage: build
  tags:
  - docker

  ### Prepare environment
  before_script:
  - export readonly PROJECT_VERSION=$(git describe --abbrev=0 --tags)
  - command -v envsubst || apk add gettext
  - echo "${CI_REGISTRY_PASSWORD}" | docker login --username "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"

  ### Build image
  script:
  - >
    for dockerfile in Dockerfile.*
    do
      export PROJECT_FLAVOUR=${dockerfile##*.}
      envsubst < ${dockerfile} > Dockerfile
      docker build --pull \
        --tag "${CI_REGISTRY_IMAGE}:${PROJECT_VERSION}"-${PROJECT_FLAVOUR}" \
        --tag "${CI_REGISTRY_IMAGE}:${PROJECT_VERSION}" \
        --tag "${CI_REGISTRY_IMAGE}:${PROJECT_FLAVOUR}" \
        --tag "${CI_REGISTRY_IMAGE}" \
        .
      docker push --all-tags "${CI_REGISTRY_IMAGE}"
    done

  ### Cleanup environment
  after_script:
  - docker logout "${CI_REGISTRY}"

###
### Build @ hub.docker.com
###
build:docker.com:
  stage: build
  tags:
  - docker
  only:
  - main
  
  ### Prepare environment
  before_script:
  - export readonly PROJECT_VERSION=$(git describe --abbrev=0 --tags)
  - export readonly PROJECT_IMAGE="cylian/console"
  - command -v envsubst || apk add gettext
  - echo "${CI_REGISTRY_PASSWORD}" | docker login --username "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  - echo "${DOCKER_HUB_PASSWORD}"  | docker login --username "${DOCKER_HUB_USER}"  --password-stdin

  ### Build image
  script:
  - >
    for dockerfile in Dockerfile.*
    do
      export PROJECT_FLAVOUR=${dockerfile##*.}
      envsubst < ${dockerfile} > Dockerfile
      docker build --pull \
        --tag "${CI_REGISTRY_IMAGE}:${PROJECT_VERSION}"-${PROJECT_FLAVOUR}" \
        --tag "${CI_REGISTRY_IMAGE}:${PROJECT_VERSION}" \
        --tag "${CI_REGISTRY_IMAGE}:${PROJECT_FLAVOUR}" \
        --tag "${CI_REGISTRY_IMAGE}" \
        .
      docker push --all-tags "${CI_REGISTRY_IMAGE}"
    done

  ### Cleanup environment
  after_script:
  - docker logout
  - docker logout "${CI_REGISTRY}"
